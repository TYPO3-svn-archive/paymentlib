	Franz Holzinger <franz@ttproducts.de>
	* Change to proxy to support the whole interface without possibility to access the real provider object
	* proxy uses the interface for the provider and is not inherited from the provider class
	* add empty interface to support basket methods
	* add many methods to the provider class to keep the the gateway specific extensions small
	* add payment method images by DIBS
	* add error and cookie methods

VERSION SVN (~0.3.0)

VERSION 0.3.0
	* Added to interface functions for providing a general way of setting URIs
	for redirecting users after a successful/failed transaction:
		abstract public function transaction_setOkPage ($uri)
		abstract public function transaction_setErrorPage ($uri)
	* Fixed missing functions in unit tests
	* Explain unit test framework verification

VERSION 0.2.1

	* Added database field 'paymethod_method' which should hold the selected
	payment method - eg. 'paymethod_method' => 'paymentlib_offline_giro', so a
	specific method can be identified in the table tx_paymentlib_transactions.
	* Fixed typos in transaction constants
	* Fixed typos in README
	* The module "mod1" is removed. A seperate extension "paymentlib_admin" will
	handle backend operations on the tx_paymentlib_transactions table

VERSION 0.2.0

	* Add to new abstract functions, which can be used for adding extra
	functionality to the payment form (see paymentlib_offline for example):
		abstract public function transaction_formGetFormParms ()
		abstract public function transaction_formGetSubmitParms ()

	* Added constants for transactions states in
	class.tx_paymentlib_provider.php

	* Added a tceform itemProcFunc function for displaying payment details in
	records.
		Function: itemsProcFunc_paymentDetails ($PA, $fobj)

    * Made reference a required field. If not applicable on your payment method,
    create an unique value eg. from (micro)time stamp.
    	Function: transaction_getResults ($reference)
    	Field: $transactionDetailsArr['options']['reference']

	* Altered function getTransactionsByExtKey() according to new database
	fields

    * Altered database table to reflect the common values of a transaction and a
    more non-gateway specific naming.
        CREATE TABLE tx_paymentlib_transactions (

        	-- Standard Typo3 fields
            id int(11) UNSIGNED NOT NULL auto_increment,
            pid int(11) UNSIGNED DEFAULT '0' NOT NULL,
            crdate int(11) UNSIGNED DEFAULT '0' NOT NULL,

            -- Typically an unique identification of the transaction returned by
            -- gateway. Used for capture, reversal etc.
            gatewayid varchar(255) NOT NULL,

            -- A unique identification of the transaction by your own choise. If
            -- not applicapable in your gateway, just use some autogenerated
            -- unique value
            reference varchar(255) DEFAULT '0' NOT NULL,

            -- The currency ISO3 value (eg. 'EUR' for Euro)
            currency varchar(3) DEFAULT '' NOT NULL,

            -- The amount in the smallest possible unit (eg. 1.00 EUR = 100)
            amount bigint(64) UNSIGNED DEFAULT 0 NOT NULL,

            -- Referes to constants defined in class.tx_paymentlib_provider.php
            state int(3) UNSIGNED DEFAULT '0' NOT NULL,

            -- The timestamp returned by gateway. MUST be an Unix timestamp
            state_time int(11) UNSIGNED DEFAULT '0' NOT NULL,

            -- A text message about the transaction status returned by gateway
            message varchar(255) DEFAULT '' NOT NULL,

            -- The extension key of the extension using paymentlib
            ext_key varchar(100) DEFAULT '' NOT NULL,

            -- The extension key of the payment method used by paymentlib
            paymethod_key varchar(100) DEFAULT '' NOT NULL,

            -- Any special or gateway specific values. Normally an array like:
            -- $user = Array(
            -- 		'gateway' => Array (
            -- 			// Gateway specific values
            -- 		),
            -- 		'extras' => Array (
            --			// Any extra information like customer data etc.
            --		),
            -- );
            user text DEFAULT '' NOT NULL,

            PRIMARY KEY (uid),
            KEY parent (pid)
        );

VERSION 0.1.1

    * Last release from Robert Lemke.
